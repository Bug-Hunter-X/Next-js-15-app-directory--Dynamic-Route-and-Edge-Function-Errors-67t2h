In Next.js 15, the introduction of the `app` directory and the changes to the routing system can lead to unexpected behavior if you're not careful.  One uncommon error arises when using dynamic routes within the `app` directory and improper handling of edge functions. If you fetch data within an edge function (like `getServerSideProps` or middleware) that relies on a dynamic route segment, and that segment isn't properly handled or validated, you might encounter unexpected errors or inconsistencies. For example, if you have a route like `/products/[productId]` and don't validate `productId`, malicious users could pass invalid parameters leading to errors or unexpected data fetching. Another potential issue involves incorrect use of `async/await` within edge functions resulting in unexpected behavior or race conditions.  Improper error handling in edge functions can also propagate errors silently, making debugging more difficult. 